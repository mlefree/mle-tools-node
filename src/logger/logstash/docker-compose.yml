name: logstash
services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - action.auto_create_index=true
      # Disk watermark settings for low disk space environments
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=97%
      - cluster.routing.allocation.disk.watermark.high=98%
      - cluster.routing.allocation.disk.watermark.flood_stage=99%
      - cluster.routing.allocation.disk.watermark.enable_for_single_data_node=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./.gen/es_data:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_SYSTEM_INDICES_ENABLED=true
      - LOGGING_ROOT_LEVEL=warn
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  ilm_setup:
    image: curlimages/curl:latest
    platform: linux/arm64
    container_name: ilm_setup
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    volumes:
      - ./setup_ilm.sh:/setup_ilm.sh
    command: sh /setup_ilm.sh

  logstash:
    image: docker.elastic.co/logstash/logstash:8.12.0
    container_name: logstash
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    volumes:
      - "./logstash.conf:/usr/share/logstash/pipeline/logstash.conf"
      - "./logs_sample:/app/logs/sample:ro"
      - "../../../.logs:/app/logs/mle-tools"
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
